name: Node.js CI/CD

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

# GitHub Actions에 리포지토리 콘텐츠 수정 권한 부여
permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # node_modules 캐싱 (npm install 속도 개선)
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test -- --watchAll=false

      # .env 파일 생성
      - name: Create .env File
        run: |
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" > .env.production
          echo "✅ .env.production 파일이 생성되었습니다!"
          cat .env.production

      # build 폴더 캐싱 (빌드 속도 개선)
      - name: Cache Build Files
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-build-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Build application
        run: |
          echo "빌드 시작! 현재 적용된 환경 변수:"
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}"
          npm install -g cross-env
          CI=false cross-env REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }} npm run build
          echo "✅ 빌드 완료!"

      - name: Set Git user info
        run: |
          git config --global user.email 'rryunn@ajou.ac.kr'
          git config --global user.name 'rryunn'

      # main 브랜치에 push될 때만 배포 실행
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run deploy
