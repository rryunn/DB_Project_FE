{"version":3,"file":"static/js/842.3115fc80.chunk.js","mappings":"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","sources":["components/MemberManagementPage/MemberManagementPage.styles.jsx","components/MemberManagementPage/MemberManagementPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: Arial, sans-serif;\n  background-color: #f9f9f9;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 2rem;\n  background-color: #fff;\n  border-bottom: 1px solid #ddd;\n`;\n\nexport const Logo = styled.div`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #0056b3;\n`;\n\n// ✅ 네비게이션 스타일 수정\nexport const Nav = styled.nav`\n  display: flex;\n  gap: 2rem; /* 일정한 간격 유지 */\n  align-items: center;\n`;\n\nexport const NavItem = styled.div`\n  color: #000; /* 검은색으로 변경 */\n  font-size: 1rem;\n  font-weight: bold;\n  cursor: pointer;\n  padding: 0.5rem 1rem; /* 클릭 영역 확대 및 일정한 크기 */\n  transition: color 0.3s ease-in-out;\n\n  &:hover {\n    color: #0056b3; /* 마우스 오버 시 색상 변경 */\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  margin: 2rem;\n`;\n\nexport const Sidebar = styled.div`\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  border-right: 1px solid #ddd;\n  padding-right: 1rem;\n`;\n\nexport const SidebarItem = styled.div`\n  cursor: pointer;\n  font-size: 1rem;\n  color: #333;\n\n  &:hover {\n    color: #0056b3;\n  }\n`;\n\nexport const Main = styled.main`\n  flex: 1;\n  padding-left: 2rem;\n`;\n\nexport const Title = styled.h2`\n  color: #0056b3;\n  margin-bottom: 2rem;\n`;\n\nexport const Highlight = styled.span`\n  color: #ff3366;\n  font-weight: bold;\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 2rem;\n`;\n\nexport const TableHeader = styled.th`\n  border: 1px solid #ddd;\n  padding: 0.75rem;\n  background-color: #f0f8ff;\n  text-align: left;\n`;\n\nexport const TableRow = styled.tr`\n  &:nth-child(even) {\n    background-color: #f9f9f9;\n  }\n`;\n\nexport const TableCell = styled.td`\n  border: 1px solid #ddd;\n  padding: 0.75rem;\n`;\n\nexport const ButtonGroup = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-top: 1rem;\n`;\n\nexport const Button = styled.button`\n  padding: 0.75rem 2rem;\n  font-size: 1rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &.cancel {\n    background-color: #ccc;\n    color: #333;\n  }\n\n  &.save {\n    background-color: #0056b3;\n    color: white;\n\n    &:hover {\n      background-color: #003f7f;\n    }\n  }\n`;\n\n// ✅ 에러 메시지 스타일 추가\nexport const ErrorMessage = styled.p`\n  color: red;\n  font-size: 0.9rem;\n  margin-bottom: 1rem;\n`;\n\n// ✅ 성공 메시지 스타일 추가\nexport const SuccessMessage = styled.p`\n  color: green;\n  font-size: 0.9rem;\n  margin-bottom: 1rem;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // API 요청을 위한 axios 추가\nimport * as S from \"./MemberManagementPage.styles\";\n\nfunction MemberManagementPage() {\n  const [members, setMembers] = useState([]); // 부원 목록 상태\n  const [error, setError] = useState(\"\"); // 에러 메시지 상태\n  const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api/members\"; // API 주소 설정\n\n  // ✅ API에서 부원 목록 가져오기\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const response = await axios.get(API_URL);\n        console.log(\"API 응답 데이터:\", response.data);  // ✅ API 응답 데이터 확인\n\n        // 응답 데이터가 배열인지 확인 후 상태 업데이트\n        if (Array.isArray(response.data)) {\n          setMembers(response.data);\n        } else if (Array.isArray(response.data.members)) {\n          setMembers(response.data.members);\n        } else {\n          throw new Error(\"부원 데이터를 불러올 수 없습니다.\");\n        }\n      } catch (err) {\n        console.error(\"API 요청 실패:\", err);\n        setError(\"부원 목록을 불러오는 데 실패했습니다.\");\n      }\n    };\n\n    fetchMembers();\n  }, [API_URL]);\n\n  return (\n    <S.Container>\n      <S.Content>\n        <S.Sidebar>\n          <S.SidebarItem>모집글 설정</S.SidebarItem>\n          <S.SidebarItem>모집 공고</S.SidebarItem>\n          <S.SidebarItem>행사 관리</S.SidebarItem>\n          <S.SidebarItem>회원 관리</S.SidebarItem>\n          <S.SidebarItem>가입신청서 처리</S.SidebarItem>\n          <S.SidebarItem>기타</S.SidebarItem>\n        </S.Sidebar>\n        <S.Main>\n          <S.Title>\n            <S.Highlight>SWeat</S.Highlight> - 부원 관리\n          </S.Title>\n\n          {/* 에러 메시지 표시 */}\n          {error && <S.ErrorMessage>{error}</S.ErrorMessage>} \n          \n          <S.Table>\n            <thead>\n              <tr>\n                <S.TableHeader>이름</S.TableHeader>\n                <S.TableHeader>성별</S.TableHeader>\n                <S.TableHeader>학과</S.TableHeader>\n                <S.TableHeader>학번</S.TableHeader>\n                <S.TableHeader>연락처</S.TableHeader>\n                <S.TableHeader>상태</S.TableHeader>\n                <S.TableHeader>역할</S.TableHeader>\n              </tr>\n            </thead>\n            <tbody>\n              {members.length > 0 ? (\n                members.map((member, index) => (\n                  <S.TableRow key={index}>\n                    <S.TableCell>{member.name}</S.TableCell>\n                    <S.TableCell>{member.gender}</S.TableCell>\n                    <S.TableCell>{member.major}</S.TableCell>\n                    <S.TableCell>{member.studentId}</S.TableCell>\n                    <S.TableCell>{member.contact || \"없음\"}</S.TableCell>\n                    <S.TableCell>{member.status}</S.TableCell>\n                    <S.TableCell>{member.role}</S.TableCell>\n                  </S.TableRow>\n                ))\n              ) : (\n                <tr>\n                  <S.TableCell colSpan=\"7\">부원 목록이 없습니다.</S.TableCell>\n                </tr>\n              )}\n            </tbody>\n          </S.Table>\n          \n          <S.ButtonGroup>\n            <S.Button className=\"cancel\">취소</S.Button>\n            <S.Button className=\"save\">확인</S.Button>\n          </S.ButtonGroup>\n        </S.Main>\n      </S.Content>\n    </S.Container>\n  );\n}\n\nexport default MemberManagementPage;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Content","header","_templateObject2","_templateObject3","nav","_templateObject4","_templateObject5","_templateObject6","Sidebar","_templateObject7","SidebarItem","_templateObject8","Main","main","_templateObject9","Title","h2","_templateObject10","Highlight","span","_templateObject11","Table","table","_templateObject12","TableHeader","th","_templateObject13","TableRow","tr","_templateObject14","TableCell","td","_templateObject15","ButtonGroup","_templateObject16","Button","button","_templateObject17","ErrorMessage","p","_templateObject18","_templateObject19","members","setMembers","useState","error","setError","API_URL","process","useEffect","async","response","axios","get","console","log","data","Array","isArray","Error","err","fetchMembers","_jsx","S","children","_jsxs","length","map","member","index","name","gender","major","studentId","contact","status","role","colSpan","className"],"sourceRoot":""}