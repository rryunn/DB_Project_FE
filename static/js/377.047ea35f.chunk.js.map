{"version":3,"file":"static/js/377.047ea35f.chunk.js","mappings":"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","sources":["components/ClubEvent/ClubEvent.styles.jsx","components/ClubEvent/ClubEvent.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ApplyContainer = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  max-width: 1200px; /* 디자인 기준 폭 (예: 1200px) */\n  margin: 0 auto; /* 좌우 자동 여백 -> 중앙 정렬 */\n  padding: 0 10px; /* 작은 화면일 때 내부 여백 추가 */\n`;\n\nexport const Title = styled.h1`\n  font-size: 17px;\n  font-weight: bold;\n  color: #046cc4; /* 강조 색상 */\n  margin-top: 20px;\n`;\n\nexport const Description = styled.p`\n  font-size: 16px;\n  color: #555;\n  line-height: 1.5;\n`;\n\nexport const Section = styled.div`\n  margin-bottom: 10px;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 17px;\n  color: #046cc4;\n  display: inline-block; /* 텍스트 크기에 맞게 배경색 크기 조정 */\n`;\n\nexport const SectionContent = styled.p`\n  font-size: 16px;\n  color: #555;\n  line-height: 1.5;\n  text-align: left; /* 텍스트를 왼쪽 정렬 */\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nexport const ContactButton = styled.button`\n  padding: 10px 20px;\n  font-size: 16px;\n  font-weight: bold;\n  color: #046cc4;\n  background-color: #e6f7ff;\n  border: 2px solid #046cc4;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, color 0.3s ease;\n\n  &:hover {\n    background-color: #046cc4;\n    color: #ffffff;\n  }\n`;\n\nexport const ApplyButton = styled.button`\n  padding: 10px 20px;\n  font-size: 16px;\n  font-weight: bold;\n  color: #ffffff;\n  background-color: #046cc4;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #004a8c;\n  }\n`;\n\nexport const Loading = styled.div`\n  font-size: 18px;\n  color: #046cc4;\n  text-align: center;\n  padding: 50px 0;\n`;\n\nexport const Error = styled.div`\n  font-size: 18px;\n  text-align: center;\n`;\nexport const Message = styled.p`\n  font-size: 18px;\n  color: #28a745; /* 녹색 메시지 */\n  font-weight: bold;\n  margin-top: 20px;\n  text-align: center;\n`;\n\nexport const InfoBox = styled.div`\n  margin-top: 10px;\n  border-top: 1px solid #ddd;\n  padding-top: 10px;\n`;\n\nexport const InfoItem = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n`;\n\nexport const Label = styled.span`\n  font-weight: bold;\n  width: 100px;\n`;\n\nexport const Value = styled.span`\n  color: #333;\n`;\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n  margin: 10px 0;\n`;\n\nexport const Image = styled.img`\n  width: 100px;\n  height: auto;\n  border-radius: 4px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport * as S from \"./ClubEvent.styles\"; // 스타일 파일 임포트\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nfunction ClubApply({ club_id }) {\n  const [recruitmentInfo, setRecruitmentInfo] = useState(null); // 행사 정보 상태\n  const [loading, setLoading] = useState(true); // 로딩 상태\n  const [error, setError] = useState(null); // 에러 상태\n\n  // 행사 데이터 가져오기\n  useEffect(() => {\n    const fetchRecruitment = async () => {\n      try {\n        const response = await axios.get(\n          `${API_URL}/api/clubs/${club_id}/events`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"ngrok-skip-browser-warning\": \"69420\",\n            },\n          }\n        );\n\n        console.log(response.data);\n        setRecruitmentInfo(response.data); // API 응답 데이터를 상태에 저장\n      } catch (err) {\n        setError(\"데이터를 불러오는 중 오류가 발생했습니다.\");\n      } finally {\n        setLoading(false); // 로딩 종료\n      }\n    };\n\n    fetchRecruitment();\n  }, [club_id]);\n\n  if (loading) return <S.Loading>Loading...</S.Loading>;\n  if (error) return <S.Error>{error}</S.Error>;\n\n  return (\n    <S.ApplyContainer>\n      {recruitmentInfo && recruitmentInfo.length > 0 ? (\n        recruitmentInfo.map((event) => (\n          <div key={event.event_id}>\n            <S.Title>{event.title || \"행사 제목\"}</S.Title>\n            <S.Description>\n              {event.description || \"행사 설명이 제공되지 않았습니다.\"}\n            </S.Description>\n            {event.event_image_url && (\n              <S.ImageContainer>\n                {Array.isArray(event.event_image_url) ? (\n                  event.event_image_url.map((url, index) => (\n                    <S.Image\n                      key={index}\n                      src={url}\n                      alt={`${event.title} 이미지 ${index + 1}`}\n                    />\n                  ))\n                ) : (\n                  <S.Image\n                    src={event.event_image_url}\n                    alt={`${event.title} 이미지`}\n                  />\n                )}\n              </S.ImageContainer>\n            )}\n\n            <S.InfoBox>\n              <S.InfoItem>\n                <S.Label>장소:</S.Label>\n                <S.Value>{event.location || \"장소 정보가 없습니다.\"}</S.Value>\n              </S.InfoItem>\n              <S.InfoItem>\n                <S.Label>날짜:</S.Label>\n                <S.Value>\n                  {event.event_date\n                    ? new Date(event.event_date).toLocaleString()\n                    : \"날짜 정보가 없습니다.\"}\n                </S.Value>\n              </S.InfoItem>\n              <S.InfoItem>\n                <S.Label>카테고리:</S.Label>\n                <S.Value>\n                  {event.event_category || \"카테고리 정보가 없습니다.\"}\n                </S.Value>\n              </S.InfoItem>\n            </S.InfoBox>\n          </div>\n        ))\n      ) : (\n        <S.Error>❌진행 중인 행사가 없습니다.</S.Error>\n      )}\n    </S.ApplyContainer>\n  );\n}\n\nexport default ClubApply;\n"],"names":["ApplyContainer","styled","div","_templateObject","_taggedTemplateLiteral","Title","h1","_templateObject2","Description","p","_templateObject3","Loading","_templateObject4","h2","_templateObject5","_templateObject6","_templateObject7","button","_templateObject8","_templateObject9","_templateObject10","Error","_templateObject11","InfoBox","_templateObject12","_templateObject13","InfoItem","_templateObject14","Label","span","_templateObject15","Value","_templateObject16","ImageContainer","_templateObject17","Image","img","_templateObject18","_ref","club_id","recruitmentInfo","setRecruitmentInfo","useState","loading","setLoading","error","setError","useEffect","async","response","axios","get","concat","process","headers","console","log","data","err","fetchRecruitment","_jsx","S","children","length","map","event","_jsxs","title","description","event_image_url","Array","isArray","url","index","src","alt","location","event_date","Date","toLocaleString","event_category","event_id"],"sourceRoot":""}