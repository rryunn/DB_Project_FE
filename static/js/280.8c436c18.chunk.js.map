{"version":3,"file":"static/js/280.8c436c18.chunk.js","mappings":"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","sources":["components/ClubList/ClubList.styles.jsx","components/ClubList/ClubList.jsx"],"sourcesContent":["// ClubList.styles.js\n\nimport styled from \"styled-components\";\n\nexport const PageContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  box-sizing: border-box; /* 패딩이 전체 너비에 포함되도록 */\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    padding: 10px;\n    gap: 10px;\n    max-width: 100%; /* 모바일에서는 전체 너비 사용 */\n    overflow-x: hidden; /* 수평 스크롤 방지 */\n  }\n`;\n\nexport const Content = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%; /* 모바일에서 100% 너비 보장 */\n`;\n\nexport const Title1 = styled.h1`\n  width: 100%;\n  font-size: 20px;\n  font-weight: 700;\n  color: #1d1d1f;\n  text-align: left;\n  margin-bottom: 10px;\n`;\n\nexport const TitleBar = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: black;\n  margin-bottom: 15px;\n  border-radius: 2px;\n`;\n\nexport const Container = styled.div`\n  display: grid;\n\n  grid-template-columns: repeat(auto-fit, minmax(150px, max-content));\n  gap: 20px;\n  width: 100%;\n  margin: 0 auto;\n\n  /* 왼쪽 정렬을 위해 center 대신 start 사용 */\n  justify-content: start;\n  align-items: start;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    justify-content: center;\n  }\n`;\n\n/* EventBox: 카드 자체는 그리드 셀의 너비에 맞춰 중앙에 배치 */\nexport const EventBox = styled.div`\n  width: 100%;\n  max-width: 180px;\n  background-color: #ffffff;\n  border: 0.2px solid rgb(213, 213, 213);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  transition: transform 0.3s ease;\n  cursor: pointer;\n  margin: 0 auto; /* 그리드 셀 내에서 중앙 정렬 */\n\n  &:hover {\n    transform: translateY(-8px);\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\n// ImageWrapper: 모바일에서도 이미지를 숨기지 않고 보여줌\nexport const ImageWrapper = styled.div`\n  width: 100%;\n  position: relative;\n\n  img {\n    width: 100%;\n    height: 180px;\n    object-fit: cover;\n  }\n\n  &::before {\n    content: attr(data-label);\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    background-color: rgb(255, 82, 85);\n    color: white;\n    font-size: 11px;\n    font-weight: bold;\n    padding: 4px 10px;\n    border-radius: 8px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 16px;\n  font-weight: 700;\n  color: #1d1d1f;\n  text-align: center;\n  margin: 10px 0;\n\n  @media (max-width: 768px) {\n    text-align: left;\n    margin: 10px 0 0 0;\n    color: #000;\n    margin-left: 10px;\n  }\n`;\n\nexport const Description = styled.p`\n  font-size: 14px;\n  color: #6e6e73;\n  text-align: center;\n  margin: 0 10px 10px 10px;\n\n  @media (max-width: 768px) {\n    text-align: left;\n  }\n`;\nexport const SidebarHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  padding: 8px 10px; /* 패딩을 줄임 */\n  background-color: #f9f9f9;\n  border-radius: 4px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const Sidebar = styled.div`\n  /* 데스크톱 기본 스타일 */\n  width: 180px;\n  background-color: #f9f9f9;\n  padding: 20px; /* 데스크톱일 때는 20px 패딩 */\n  border-radius: 10px;\n  margin-right: 30px;\n  box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.1);\n  position: sticky;\n  top: 20px;\n  height: fit-content;\n\n  /* 모바일(768px 이하)에서 덮어쓰기 */\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-bottom: 10px;\n    position: static;\n    padding: 8px 0px; /* 모바일일 때는 8px 10px으로 변경 */\n  }\n`;\n\nexport const SidebarTitle = styled.h2`\n  /* 데스크톱 기본 스타일 */\n  font-size: 18px; /* 데스크톱에서 18px */\n  font-weight: 700; /* 데스크톱에서 700 */\n  color: #1d1d1f;\n  margin-bottom: 10px;\n\n  /* 모바일(768px 이하)에서 덮어쓰기 */\n  @media (max-width: 768px) {\n    font-size: 16px;\n    font-weight: 600;\n    margin: 0;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const SidebarList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: ${(props) => (props.expanded ? \"block\" : \"none\")};\n\n  @media (min-width: 768px) {\n    display: block; /* 데스크탑에서는 항상 보이도록 */\n  }\n`;\n\nexport const SidebarItem = styled.li`\n  font-size: 14px;\n  font-weight: ${(props) => (props.isSelected ? \"700\" : \"400\")};\n  color: ${(props) => (props.isSelected ? \"#007aff\" : \"#333\")};\n  margin-bottom: 10px;\n  cursor: pointer;\n  padding: 5px 10px;\n  border-radius: 5px;\n  background-color: ${(props) =>\n    props.isSelected ? \"#e6f7ff\" : \"transparent\"};\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;\nexport const TopBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n`;\nexport const SearchContainer = styled.div`\n  position: relative;\n  width: 250px; /* 필요에 따라 조정 */\n  margin-right: 10px;\n`;\n\n// 검색 인풋: 아랫줄 테두리만 표시\nexport const SearchInput = styled.input`\n  width: 70%;\n  padding: 8px 40px 8px 12px; /* 오른쪽 여백은 아이콘 공간 확보 */\n  font-size: 14px;\n  border: none;\n  border-bottom: 1px solid #333; /* 진한 검정색 아랫줄 */\n  outline: none;\n\n  &::placeholder {\n    color: #555; /* placeholder 텍스트 색상 */\n  }\n`;\n\n// 검색 아이콘: 오른쪽 끝에 위치하도록 절대배치\nexport const SearchIcon = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #333;\n  font-size: 16px;\n`;\nexport const MobileSearchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin: 10px auto;\n  padding-bottom: 5px;\n  border-bottom: 2px solid black;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const MobileSearchInput = styled.input`\n  flex: 1;\n  border: none;\n  outline: none;\n  font-size: 14px;\n  color: #333;\n  background: transparent;\n  padding: 5px;\n  &::placeholder {\n    color: #555;\n  }\n`;\n\nexport const MobileSearchIcon = styled.div`\n  margin-left: 5px;\n  color: #555;\n`;\nexport const FilterContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-right: 20px;\n`;\n\nexport const FilterButton = styled.button`\n  background-color: ${(props) => (props.isSelected ? \"#007aff\" : \"#f0f0f0\")};\n  color: ${(props) => (props.isSelected ? \"#fff\" : \"#333\")};\n  border: none;\n  width: 60px;\n  padding: 4px 16px;\n  border-radius: 10px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: bold;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: ${(props) => (props.isSelected ? \"#005bb5\" : \"#e0e0e0\")};\n  }\n`;\nexport const MobileFilterContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-left: auto; /* 오른쪽 정렬 */\n\n  @media (min-width: 768px) {\n    display: none; /* 데스크탑에서는 숨기기 */\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport * as S from './ClubList.styles';\nimport axios from 'axios';\nimport defaultImage from '../../asset/mainLogo.png';\nimport { useNavigate } from 'react-router-dom';\nimport { FaChevronDown, FaChevronUp, FaSearch } from 'react-icons/fa';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nconst categories = [\n  {\n    title: '중앙동아리',\n    items: [\n      '과학기술분과',\n      '레저스포츠분과',\n      '사회활동분과',\n      '연행예술분과',\n      '준동아리',\n      '종교분과',\n      '창작전시분과',\n      '체육분과',\n      '학술언론분과',\n    ],\n  },\n];\n\nfunction ClubList() {\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState('전체'); // 기본값을 \"전체\"로!\n\n  const navigate = useNavigate();\n\n  // 📌 모바일 여부 감지\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  useEffect(() => {\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // 📌 모바일 사이드바 확장 여부\n  const [sidebarExpanded, setSidebarExpanded] = useState(false);\n  useEffect(() => {\n    if (isMobile) {\n      setSidebarExpanded(false);\n    }\n  }, [selectedCategory, isMobile]);\n\n  // 🔄 카테고리 변경 시 검색어 리셋\n  useEffect(() => {\n    setSearchTerm('');\n  }, [selectedCategory]);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(\n          `${API_URL}/api/clubs/central${\n            selectedCategory\n              ? `?details=${encodeURIComponent(selectedCategory)}`\n              : ''\n          }`,\n          {\n            headers: {\n              'Content-Type': 'application/json',\n              'ngrok-skip-browser-warning': '69420',\n            },\n          }\n        );\n\n        setEvents(\n          Array.isArray(response.data)\n            ? response.data.map((event) => ({\n                ...event,\n                image: event.logo_url || defaultImage,\n                description:\n                  event.club_description || '설명이 제공되지 않았습니다.',\n              }))\n            : []\n        );\n      } catch (err) {\n        setError(err.response?.data?.message || err.message);\n        setEvents([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchEvents();\n  }, [selectedCategory]);\n\n  if (loading) return <S.PageContainer>Loading...</S.PageContainer>;\n  if (error) return <S.PageContainer>Error: {error}</S.PageContainer>;\n\n  const handleEventClick = (id) => {\n    navigate(`/clubinfo/${id}`);\n  };\n\n  // 🔍 검색 input onChange 핸들러\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  // 📌 모집 마감일 계산 함수\n  const getRecruitmentLabel = (event) => {\n    if (!event.recruitment_type) {\n      return '상시';\n    } else if (event.recruitment_type === '수시모집') {\n      const today = new Date();\n      const endDate = new Date(event.recruitment_end_date);\n      const diffTime = endDate - today;\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n      return diffDays < 0 ? '마감' : `D-${diffDays}`;\n    }\n    return '';\n  };\n\n  // 🔍 검색어로 시작하는 동아리만 필터링\n  let filteredEvents = events.filter((event) =>\n    event.club_name.toLowerCase().startsWith(searchTerm.toLowerCase())\n  );\n\n  // 📌 모집 필터 적용 (수시 / 상시)\n  if (selectedFilter === '수시') {\n    filteredEvents = filteredEvents.filter(\n      (event) => event.recruitment_type === '수시모집'\n    );\n  } else if (selectedFilter === '상시') {\n    filteredEvents = filteredEvents.filter(\n      (event) => !event.recruitment_type || event.recruitment_type === '상시'\n    );\n  }\n\n  return (\n    <S.PageContainer>\n      {/* 📌 모바일에서만 검색창 추가 */}\n      {isMobile && (\n        <S.MobileSearchContainer>\n          <S.MobileSearchInput\n            type=\"text\"\n            placeholder=\"검색\"\n            value={searchTerm}\n            onChange={handleSearchChange}\n          />\n          <S.MobileSearchIcon>\n            <FaSearch />\n          </S.MobileSearchIcon>\n        </S.MobileSearchContainer>\n      )}\n\n      <S.Sidebar>\n        {isMobile ? (\n          <>\n            <S.SidebarHeader\n              onClick={() => setSidebarExpanded(!sidebarExpanded)}\n            >\n              <S.SidebarTitle>{categories[0].title}</S.SidebarTitle>\n              {sidebarExpanded ? <FaChevronUp /> : <FaChevronDown />}\n            </S.SidebarHeader>\n            <S.SidebarList expanded={sidebarExpanded}>\n              {categories[0].items.map((item, index) => (\n                <S.SidebarItem\n                  key={index}\n                  onClick={() => {\n                    setSelectedCategory(item);\n                    setSidebarExpanded(false);\n                  }}\n                  isSelected={selectedCategory === item}\n                >\n                  {item}\n                </S.SidebarItem>\n              ))}\n            </S.SidebarList>\n          </>\n        ) : (\n          <>\n            <S.SidebarTitle>{categories[0].title}</S.SidebarTitle>\n            <S.SidebarList>\n              {categories[0].items.map((item, index) => (\n                <S.SidebarItem\n                  key={index}\n                  onClick={() => setSelectedCategory(item)}\n                  isSelected={selectedCategory === item}\n                >\n                  {item}\n                </S.SidebarItem>\n              ))}\n            </S.SidebarList>\n          </>\n        )}\n      </S.Sidebar>\n\n      <S.Content>\n        <S.TopBar>\n          <S.Title1>\n            중앙동아리 {'>'} {selectedCategory || '전체'}\n          </S.Title1>\n\n          {/* 📌 필터 버튼 추가 */}\n          {!isMobile && (\n            <S.FilterContainer>\n              {' '}\n              <S.FilterButton\n                onClick={() =>\n                  setSelectedFilter(selectedFilter === '전체' ? '' : '전체')\n                }\n                isSelected={selectedFilter === '전체'}\n              >\n                전체\n              </S.FilterButton>\n              <S.FilterButton\n                onClick={() =>\n                  setSelectedFilter(selectedFilter === '수시' ? '' : '수시')\n                }\n                isSelected={selectedFilter === '수시'}\n              >\n                수시\n              </S.FilterButton>\n              <S.FilterButton\n                onClick={() =>\n                  setSelectedFilter(selectedFilter === '상시' ? '' : '상시')\n                }\n                isSelected={selectedFilter === '상시'}\n              >\n                상시\n              </S.FilterButton>{' '}\n            </S.FilterContainer>\n          )}\n\n          {/* 📌 데스크탑 검색창 */}\n          {!isMobile && (\n            <S.SearchContainer>\n              <S.SearchInput\n                type=\"text\"\n                placeholder=\"검색\"\n                value={searchTerm}\n                onChange={handleSearchChange}\n              />\n              <S.SearchIcon>\n                <FaSearch />\n              </S.SearchIcon>\n            </S.SearchContainer>\n          )}\n        </S.TopBar>\n\n        <S.TitleBar />\n        <S.Container>\n          {filteredEvents.map((event) => (\n            <S.EventBox\n              key={event.club_id}\n              onClick={() => handleEventClick(event.club_id)}\n            >\n              <S.ImageWrapper data-label={getRecruitmentLabel(event)}>\n                <LazyLoadImage\n                  src={event.image}\n                  alt={event.club_name}\n                  effect=\"blur\" // 로딩 시 blur 효과 (옵션)\n                  width=\"100%\"\n                  height=\"100%\"\n                />\n              </S.ImageWrapper>\n              <S.Title>{event.club_name}</S.Title>\n              <S.Description>\n                {event.description.length > 25\n                  ? `${event.description.slice(0, 25)}...`\n                  : event.description}\n              </S.Description>\n            </S.EventBox>\n          ))}\n        </S.Container>\n      </S.Content>\n    </S.PageContainer>\n  );\n}\n\nexport default ClubList;\n"],"names":["PageContainer","styled","div","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","Title1","h1","_templateObject3","TitleBar","_templateObject4","Container","_templateObject5","EventBox","_templateObject6","ImageWrapper","_templateObject7","Title","h2","_templateObject8","Description","p","_templateObject9","SidebarHeader","_templateObject10","Sidebar","_templateObject11","SidebarTitle","_templateObject12","SidebarList","ul","_templateObject13","props","expanded","SidebarItem","li","_templateObject14","isSelected","TopBar","_templateObject15","SearchContainer","_templateObject16","SearchInput","input","_templateObject17","SearchIcon","_templateObject18","MobileSearchContainer","_templateObject19","MobileSearchInput","_templateObject20","MobileSearchIcon","_templateObject21","FilterContainer","_templateObject22","FilterButton","button","_templateObject23","_templateObject24","categories","title","items","events","setEvents","useState","loading","setLoading","error","setError","selectedCategory","setSelectedCategory","searchTerm","setSearchTerm","selectedFilter","setSelectedFilter","navigate","useNavigate","isMobile","setIsMobile","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","sidebarExpanded","setSidebarExpanded","async","response","axios","get","concat","process","encodeURIComponent","headers","Array","isArray","data","map","event","_objectSpread","image","logo_url","defaultImage","description","club_description","err","_err$response","_err$response$data","message","fetchEvents","_jsx","S","children","_jsxs","handleSearchChange","e","target","value","getRecruitmentLabel","recruitment_type","today","Date","diffTime","recruitment_end_date","diffDays","Math","ceil","filteredEvents","filter","club_name","toLowerCase","startsWith","type","placeholder","onChange","FaSearch","_Fragment","onClick","FaChevronUp","FaChevronDown","item","index","handleEventClick","id","club_id","LazyLoadImage","src","alt","effect","width","height","length","slice"],"sourceRoot":""}