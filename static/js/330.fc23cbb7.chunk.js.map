{"version":3,"file":"static/js/330.fc23cbb7.chunk.js","mappings":"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","sources":["components/Miniclub/MiniClub.styles.jsx","components/Miniclub/MiniClub.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\n/* PageContainer: 데스크탑에서는 사이드바와 콘텐츠를 좌우 배치, 모바일에서는 세로 배치 */\nexport const PageContainer = styled.div`\n  display: flex;\n  flex-direction: row; /* 기본: 좌우 배치 */\n  gap: 20px;\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  box-sizing: border-box;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    padding: 10px;\n    gap: 10px;\n  }\n`;\n\nexport const SidebarList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const SidebarItem = styled.li`\n  font-size: 14px;\n  font-weight: ${({ isselected }) => (isselected ? \"700\" : \"400\")};\n  color: ${({ isselected }) => (isselected ? \"rgb(56, 56, 57)\" : \"#333\")};\n  margin-bottom: 10px;\n  cursor: pointer;\n  padding: 5px 10px;\n  border-radius: 5px;\n  transition: background-color 0.3s ease, color 0.3s ease;\n  background-color: ${({ isselected }) =>\n    isselected ? \"#f0f0f0\" : \"transparent\"};\n\n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;\n\nexport const SidebarSubItem = styled.li`\n  padding: 8px 15px;\n  font-size: 13px;\n  cursor: pointer;\n  color: ${({ isselected }) => (isselected ? \"rgb(18, 103, 188)\" : \"#6c757d\")};\n  transition: color 0.3s ease;\n  margin-left: 20px;\n  border-left: 2px solid #e0e0e0;\n  padding-left: 10px;\n\n  &:hover {\n    color: rgb(18, 103, 188);\n  }\n`;\n\nexport const Content = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const Title1 = styled.h1`\n  width: 100%;\n  font-size: 20px;\n  font-weight: 700;\n  color: #1d1d1f;\n  text-align: left;\n  margin-bottom: 10px;\n`;\n\nexport const TitleBar = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: black;\n  margin-bottom: 15px;\n  border-radius: 2px;\n`;\n\nexport const Container = styled.div`\n  display: grid;\n\n  grid-template-columns: repeat(auto-fit, minmax(150px, max-content));\n  gap: 20px;\n  width: 100%;\n  margin: 0 auto;\n\n  /* 왼쪽 정렬을 위해 center 대신 start 사용 */\n  justify-content: start;\n  align-items: start;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    justify-content: center;\n  }\n`;\n\n/* EventBox: 카드 자체는 그리드 셀의 너비에 맞춰 중앙에 배치 */\nexport const EventBox = styled.div`\n  width: 100%;\n  max-width: 180px;\n  background-color: #ffffff;\n  border: 0.2px solid rgb(213, 213, 213);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  transition: transform 0.3s ease;\n  cursor: pointer;\n  margin: 0 auto; /* 그리드 셀 내에서 중앙 정렬 */\n\n  &:hover {\n    transform: translateY(-8px);\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\n/* ImageWrapper: 이미지는 항상 전체 너비에 맞게 표시 */\nexport const ImageWrapper = styled.div`\n  width: 100%;\n  position: relative;\n\n  img {\n    width: 100%;\n    height: 180px;\n    object-fit: cover;\n  }\n\n  &::before {\n    content: attr(data-label);\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    background-color: rgb(255, 82, 85);\n    color: white;\n    font-size: 11px;\n    font-weight: bold;\n    padding: 4px 10px;\n    border-radius: 8px;\n  }\n\n  &::after {\n    content: attr(data-scope);\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background-color: rgb(255, 82, 85);\n    color: white;\n    font-size: 11px;\n    font-weight: bold;\n    padding: 4px 10px;\n    border-radius: 8px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 16px;\n  font-weight: 700;\n  color: #1d1d1f;\n  text-align: center;\n  margin: 10px 0;\n\n  @media (max-width: 768px) {\n    text-align: left;\n    margin: 10px 0 0 0;\n    color: #000;\n\n    margin-left: 10px;\n  }\n`;\n\nexport const Description = styled.p`\n  font-size: 14px;\n  color: #6e6e73;\n  text-align: center;\n  margin: 0 10px 10px 10px;\n\n  @media (max-width: 768px) {\n    text-align: left;\n  }\n`;\n\nexport const RecruitmentInfo = styled.p`\n  font-size: 0.9rem;\n  color: #666;\n  margin-top: 4px;\n`;\nexport const SidebarHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  padding: 8px 10px; /* 패딩을 줄임 */\n  background-color: #f9f9f9;\n  border-radius: 4px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nexport const Sidebar = styled.div`\n  /* 데스크톱 기본 스타일 */\n  width: 190px;\n  background-color: #f9f9f9;\n  padding: 20px; /* 데스크톱일 때는 20px 패딩 */\n  border-radius: 10px;\n  margin-right: 30px;\n  box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.1);\n  position: sticky;\n  top: 20px;\n  height: fit-content;\n\n  /* 모바일(768px 이하)에서 덮어쓰기 */\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-right: 0;\n    margin-bottom: 10px;\n    position: static;\n    padding: 8px 0px; /* 모바일일 때는 8px 10px으로 변경 */\n  }\n`;\n\nexport const SidebarTitle = styled.h2`\n  /* 데스크톱 기본 스타일 */\n  font-size: 18px; /* 데스크톱에서 18px */\n  font-weight: 700; /* 데스크톱에서 700 */\n  color: #1d1d1f;\n  margin-bottom: 10px;\n\n  /* 모바일(768px 이하)에서 덮어쓰기 */\n  @media (max-width: 768px) {\n    font-size: 16px;\n    font-weight: 600;\n    margin: 0;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\nexport const TopBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n`;\nexport const SearchContainer = styled.div`\n  position: relative;\n  width: 250px; /* 필요에 따라 조정 */\n`;\n\n// 검색 인풋: 아랫줄 테두리만 표시\nexport const SearchInput = styled.input`\n  width: 70%;\n  padding: 8px 40px 8px 12px; /* 오른쪽 여백은 아이콘 공간 확보 */\n  font-size: 14px;\n  border: none;\n  border-bottom: 1px solid #333; /* 진한 검정색 아랫줄 */\n  outline: none;\n\n  &::placeholder {\n    color: #555; /* placeholder 텍스트 색상 */\n  }\n`;\n\n// 검색 아이콘: 오른쪽 끝에 위치하도록 절대배치\nexport const SearchIcon = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #333;\n  font-size: 16px;\n`;\n\nexport const MobileSearchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin: 10px auto;\n  padding-bottom: 5px;\n  border-bottom: 2px solid black;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const MobileSearchInput = styled.input`\n  flex: 1;\n  border: none;\n  outline: none;\n  font-size: 14px;\n  color: #333;\n  background: transparent;\n  padding: 5px;\n  &::placeholder {\n    color: #555;\n  }\n`;\n\nexport const MobileSearchIcon = styled.div`\n  margin-left: 5px;\n  color: #555;\n`;\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-right: 20px;\n`;\n\nexport const FilterButton = styled.button`\n  background-color: ${(props) => (props.isSelected ? \"#007aff\" : \"#f0f0f0\")};\n  color: ${(props) => (props.isSelected ? \"#fff\" : \"#333\")};\n  border: none;\n  width: 60px;\n  padding: 4px 16px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: bold;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: ${(props) => (props.isSelected ? \"#005bb5\" : \"#e0e0e0\")};\n  }\n`;\nexport const MobileFilterContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-left: auto; /* 오른쪽 정렬 */\n\n  @media (min-width: 768px) {\n    display: none; /* 데스크탑에서는 숨기기 */\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport * as S from './MiniClub.styles';\nimport axios from 'axios';\nimport defaultImage from '../../asset/mainLogo.png';\nimport { useNavigate } from 'react-router-dom';\nimport collegesData from '../../colleges.json';\nimport { FaChevronDown, FaChevronUp, FaSearch } from 'react-icons/fa';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nfunction MiniClub() {\n  const [colleges, setColleges] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedCollege, setSelectedCollege] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // 모바일 여부 감지\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  useEffect(() => {\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // 검색 input onChange 핸들러\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  // 모바일 사이드바 확장 여부\n  const [sidebarExpanded, setSidebarExpanded] = useState(false);\n\n  // 🔄 소속학과 변경 시 검색어 초기화\n  useEffect(() => {\n    setSearchTerm('');\n  }, [selectedDepartment]);\n\n  useEffect(() => {\n    setColleges(collegesData);\n  }, []);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true);\n      try {\n        let url = `${API_URL}/api/clubs/academic`;\n        let params = {};\n        if (selectedCollege) params.college = selectedCollege;\n        if (selectedDepartment) params.department = selectedDepartment;\n\n        const response = await axios.get(url, { params });\n        setEvents(\n          Array.isArray(response.data)\n            ? response.data.map((event) => ({\n                ...event,\n                image: event.logo_url || defaultImage,\n                description:\n                  event.club_description || '설명이 제공되지 않았습니다.',\n                recruitment_scope: event.recruitment_scope,\n                recruitment_type: event.recruitment_type,\n                recruitment_end_date: event.recruitment_end_date,\n              }))\n            : []\n        );\n      } catch (err) {\n        setError(err.response?.data?.message || err.message);\n        setEvents([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchEvents();\n  }, [selectedCollege, selectedDepartment]);\n\n  // 모집 마감일 계산 함수\n  const getRecruitmentLabel = (event) => {\n    if (event.recruitment_type === null) {\n      return '상시';\n    } else if (event.recruitment_type === '수시모집') {\n      const today = new Date();\n      const endDate = new Date(event.recruitment_end_date);\n      const diffTime = endDate - today;\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      return diffDays < 0 ? '마감' : `D-${diffDays}`;\n    }\n    return '';\n  };\n\n  if (loading) return <S.PageContainer>Loading...</S.PageContainer>;\n  if (error) return <S.PageContainer>Error: {error}</S.PageContainer>;\n\n  // 🔍 검색어로 시작하는 동아리만 필터링\n  const filteredEvents = events.filter((event) =>\n    event.club_name.toLowerCase().startsWith(searchTerm.toLowerCase())\n  );\n\n  // 브레드크럼 텍스트 설정\n  const breadcrumb = `소학회 > ${selectedCollege ? selectedCollege : '전체'}${\n    selectedDepartment ? ' > ' + selectedDepartment : ''\n  }`;\n\n  return (\n    <S.PageContainer>\n      {/* 📌 모바일에서만 검색창 추가 */}\n      {isMobile && (\n        <S.MobileSearchContainer>\n          <S.MobileSearchInput\n            type=\"text\"\n            placeholder=\"검색\"\n            value={searchTerm}\n            onChange={handleSearchChange}\n          />\n          <S.MobileSearchIcon>\n            <FaSearch />\n          </S.MobileSearchIcon>\n        </S.MobileSearchContainer>\n      )}\n\n      <S.Sidebar>\n        {isMobile ? (\n          <>\n            <S.SidebarHeader\n              onClick={() => setSidebarExpanded(!sidebarExpanded)}\n            >\n              <S.SidebarTitle>소학회</S.SidebarTitle>\n              {sidebarExpanded ? <FaChevronUp /> : <FaChevronDown />}\n            </S.SidebarHeader>\n            {sidebarExpanded && (\n              <S.SidebarList>\n                {colleges.map((college, index) => (\n                  <div key={index}>\n                    <S.SidebarItem\n                      onClick={() => {\n                        setSelectedCollege(\n                          selectedCollege === college.name ? '' : college.name\n                        );\n                        setSelectedDepartment('');\n                      }}\n                      isselected={selectedCollege === college.name}\n                    >\n                      {college.name}\n                    </S.SidebarItem>\n                    {selectedCollege === college.name &&\n                      college.departments.map((dept, idx) => (\n                        <S.SidebarSubItem\n                          key={idx}\n                          onClick={() => {\n                            setSelectedDepartment(dept);\n                            setSidebarExpanded(false);\n                          }}\n                          isselected={selectedDepartment === dept}\n                        >\n                          {dept}\n                        </S.SidebarSubItem>\n                      ))}\n                  </div>\n                ))}\n              </S.SidebarList>\n            )}\n          </>\n        ) : (\n          <>\n            <S.SidebarTitle>소학회</S.SidebarTitle>\n            <S.SidebarList>\n              {colleges.map((college, index) => (\n                <div key={index}>\n                  <S.SidebarItem\n                    onClick={() => {\n                      setSelectedCollege(\n                        selectedCollege === college.name ? '' : college.name\n                      );\n                      setSelectedDepartment('');\n                    }}\n                    isselected={selectedCollege === college.name}\n                  >\n                    {college.name}\n                  </S.SidebarItem>\n                  {selectedCollege === college.name &&\n                    college.departments.map((dept, idx) => (\n                      <S.SidebarSubItem\n                        key={idx}\n                        onClick={() => setSelectedDepartment(dept)}\n                        isselected={selectedDepartment === dept}\n                      >\n                        {dept}\n                      </S.SidebarSubItem>\n                    ))}\n                </div>\n              ))}\n            </S.SidebarList>\n          </>\n        )}\n      </S.Sidebar>\n\n      <S.Content>\n        <S.TopBar>\n          <S.Title1>{breadcrumb}</S.Title1>\n\n          {/* 📌 데스크탑 검색창 유지 */}\n          {!isMobile && (\n            <S.SearchContainer>\n              <S.SearchInput\n                type=\"text\"\n                placeholder=\"검색\"\n                value={searchTerm}\n                onChange={handleSearchChange}\n              />\n              <S.SearchIcon>\n                <FaSearch />\n              </S.SearchIcon>\n            </S.SearchContainer>\n          )}\n        </S.TopBar>\n\n        <S.TitleBar />\n        <S.Container>\n          {filteredEvents.map((event) => (\n            <S.EventBox\n              key={event.club_id}\n              onClick={() => navigate(`/clubinfo/${event.club_id}`)}\n              bg={event.image}\n            >\n              <S.ImageWrapper\n                data-label={getRecruitmentLabel(event)}\n                data-scope={event.recruitment_scope || '정보 없음'}\n                style={{ height: '180px', overflow: 'hidden' }}\n              >\n                <LazyLoadImage\n                  src={event.image}\n                  alt={event.club_name}\n                  effect=\"blur\"\n                  style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n                />\n              </S.ImageWrapper>\n\n              <S.Title>{event.club_name}</S.Title>\n              <S.Description>\n                {event.description.length > 25\n                  ? `${event.description.slice(0, 25)}...`\n                  : event.description}\n              </S.Description>\n            </S.EventBox>\n          ))}\n        </S.Container>\n      </S.Content>\n    </S.PageContainer>\n  );\n}\n\nexport default MiniClub;\n"],"names":["PageContainer","styled","div","_templateObject","_taggedTemplateLiteral","SidebarList","ul","_templateObject2","SidebarItem","li","_templateObject3","_ref","isselected","_ref2","_ref3","SidebarSubItem","_templateObject4","_ref4","Content","_templateObject5","Title1","h1","_templateObject6","TitleBar","_templateObject7","Container","_templateObject8","EventBox","_templateObject9","ImageWrapper","_templateObject10","Title","h2","_templateObject11","Description","p","_templateObject12","SidebarHeader","_templateObject13","_templateObject14","Sidebar","_templateObject15","SidebarTitle","_templateObject16","TopBar","_templateObject17","SearchContainer","_templateObject18","SearchInput","input","_templateObject19","SearchIcon","_templateObject20","MobileSearchContainer","_templateObject21","MobileSearchInput","_templateObject22","MobileSearchIcon","_templateObject23","_templateObject24","button","_templateObject25","props","isSelected","_templateObject26","colleges","setColleges","useState","events","setEvents","loading","setLoading","error","setError","selectedCollege","setSelectedCollege","selectedDepartment","setSelectedDepartment","navigate","useNavigate","searchTerm","setSearchTerm","isMobile","setIsMobile","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","handleSearchChange","e","target","value","sidebarExpanded","setSidebarExpanded","collegesData","async","url","concat","process","params","college","department","response","axios","get","Array","isArray","data","map","event","_objectSpread","image","logo_url","defaultImage","description","club_description","recruitment_scope","recruitment_type","recruitment_end_date","err","_err$response","_err$response$data","message","fetchEvents","getRecruitmentLabel","today","Date","diffTime","diffDays","Math","ceil","_jsx","S","children","_jsxs","filteredEvents","filter","club_name","toLowerCase","startsWith","breadcrumb","type","placeholder","onChange","FaSearch","_Fragment","onClick","FaChevronUp","FaChevronDown","index","name","departments","dept","idx","club_id","bg","style","height","overflow","LazyLoadImage","src","alt","effect","width","objectFit","length","slice"],"sourceRoot":""}