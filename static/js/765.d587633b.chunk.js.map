{"version":3,"file":"static/js/765.d587633b.chunk.js","mappings":"uKA2DA,QArDA,WACE,MAAOA,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAyBnC,OAvBAK,EAAAA,EAAAA,YAAU,KACaC,WACnBJ,GAAW,GACX,IACE,MAOMK,SAPiBC,EAAAA,EAAMC,IAAI,GAADC,OAXxBC,8BAWmC,oBAAoB,CAC7DC,QAAS,CACP,eAAgB,mBAChB,6BAA8B,YAINC,KAAKC,MAAK,CAACC,EAAGC,IAAMD,EAAEE,GAAKD,EAAEC,KACzDlB,EAAWQ,EACb,CAAE,MAAOW,GACPd,EAAS,oHACX,CAAC,QACCF,GAAW,EACb,GAGFiB,EAAc,GACb,IAEClB,GAAgBmB,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CAAAC,SAAC,eAC3BnB,GAAciB,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAAAC,SAAEnB,KAG1BoB,EAAAA,EAAAA,MAACF,EAAAA,GAAM,CAAAC,SAAA,EACLC,EAAAA,EAAAA,MAACF,EAAAA,GAAY,CAAAC,SAAA,EACXF,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAAAC,SAAC,kBACdF,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAAAC,SAAC,kBACdF,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAAAC,SAAC,oBAEfxB,EAAQ0B,KAAKC,IACZF,EAAAA,EAAAA,MAACF,EAAAA,GAAS,CAAAC,SAAA,EACRF,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAAAC,SAAEG,EAAOR,MACtBG,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAAAC,UACXF,EAAAA,EAAAA,KAAA,KAAGM,KAAMD,EAAOE,KAAMC,OAAO,SAASC,IAAI,sBAAqBP,SAC5DG,EAAOK,WAGZV,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAAAC,SAAEG,EAAOM,SAPRN,EAAOR,QAY/B,C,qLCvDO,MAAMe,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,idAUtBC,EAAQJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2FAOjBI,EAAWP,EAAAA,GAAOC,IAAGO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,8FAOrBM,EAAeT,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,gFAMzBQ,EAAUX,EAAAA,GAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,ufAMrBU,GAAWA,EAAMC,OAAS,QAAU,UACzBD,GAAWA,EAAMC,OAAS,UAAY,UAMpCD,GAAWA,EAAMC,OAAS,UAAY,YAIlDC,EAAOf,EAAAA,GAAOC,IAAGe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,oMAOjBc,EAAajB,EAAAA,GAAOC,IAAGiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,4FAMvBgB,EAAUnB,EAAAA,GAAOC,IAAGmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,kHASpBkB,EAAarB,EAAAA,GAAOC,IAAGqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,omBA2BvBoB,EAAUvB,EAAAA,GAAOC,IAAGuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,qEAMpBsB,EAAQzB,EAAAA,GAAOC,IAAGyB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,oEAKlBwB,EAAmB3B,EAAAA,GAAOC,IAAG2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,6G","sources":["components/Notice/NoticePage.jsx","components/Notice/NoticePage.styles.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as S from './NoticePage.styles';\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nfunction NoticeList() {\n  const [notices, setNotices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchNotices = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(`${API_URL}/api/home/notice`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'ngrok-skip-browser-warning': '69420',\n          },\n        });\n        // ID 내림차순 정렬 (최신순)\n        const sortedData = response.data.sort((a, b) => a.id - b.id);\n        setNotices(sortedData);\n      } catch (err) {\n        setError('데이터를 불러오는 중 오류가 발생했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchNotices();\n  }, []);\n\n  if (loading) return <S.Loading>Loading...</S.Loading>;\n  if (error) return <S.Error>{error}</S.Error>;\n\n  return (\n    <S.List>\n      <S.ListHeader>\n        <S.ListColumn>번호</S.ListColumn>\n        <S.ListColumn>제목</S.ListColumn>\n        <S.ListColumn>날짜</S.ListColumn>\n      </S.ListHeader>\n      {notices.map((notice) => (\n        <S.ListRow key={notice.id}>\n          <S.ListColumn>{notice.id}</S.ListColumn>\n          <S.ListColumn>\n            <a href={notice.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              {notice.title}\n            </a>\n          </S.ListColumn>\n          <S.ListColumn>{notice.date}</S.ListColumn>\n        </S.ListRow>\n      ))}\n    </S.List>\n  );\n}\n\nexport default NoticeList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 80%; /* 전체 컨테이너 너비 설정 */\n  margin: 0 auto; /* 좌우 중앙 정렬 */\n  text-align: center;\n\n  max-width: 1200px; /* 디자인 기준 폭 (예: 1200px) */\n  margin: 0 auto; /* 좌우 자동 여백 -> 중앙 정렬 */\n  padding: 0 20px; /* 작은 화면일 때 내부 여백 추가 */\n`;\n\nexport const Title = styled.h1`\n  font-size: 22px;\n  color: #333;\n  margin-bottom: 15px;\n  margin-top: 30px;\n`;\n\nexport const TitleBar = styled.div`\n  width: 5%;\n  height: 0.8px;\n  background-color: black;\n  margin: 0 auto 20px;\n`;\n\nexport const TabContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const TabItem = styled.div`\n  width: 100%; /* 고정된 너비 */\n  height: 40px; /* 고정된 높이 */\n  line-height: 40px; /* 텍스트를 수직 중앙 정렬 */\n  font-size: 13px;\n  text-align: center; /* 텍스트를 가로 중앙 정렬 */\n  color: ${(props) => (props.active ? 'white' : 'black')};\n  background-color: ${(props) => (props.active ? '#046CC4' : 'white')};\n  border: 1px solid gray;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: ${(props) => (props.active ? '#005bb5' : '#f0f8ff')};\n  }\n`;\n\nexport const List = styled.div`\n  width: 100%; /* 리스트가 컨테이너에 맞도록 설정 */\n  margin-top: 20px;\n  border-top: 1px solid #ccc;\n  margin-bottom: 30px;\n`;\n\nexport const ListHeader = styled.div`\n  display: flex;\n  background-color: #f9f9f9;\n  border-bottom: 1px solid #ccc;\n`;\n\nexport const ListRow = styled.div`\n  display: flex;\n  border-bottom: 1px solid #eee;\n\n  &:hover {\n    background-color: #f8f8f8;\n  }\n`;\n\nexport const ListColumn = styled.div`\n  flex: 1;\n  padding: 10px;\n  font-size: 14px;\n  text-align: left;\n\n  &:nth-child(1) {\n    flex: 0.2; /* 번호 컬럼 너비 */\n    text-align: center;\n  }\n\n  &:nth-child(3) {\n    flex: 0.4; /* 날짜 컬럼 너비 */\n    text-align: center;\n  }\n\n  a {\n    color: inherit; /* 부모 요소의 색상을 상속 */\n    text-decoration: none; /* 밑줄 제거 */\n    cursor: pointer;\n\n    &:hover {\n      text-decoration: none; /* 호버 시에도 밑줄 제거 */\n    }\n  }\n`;\n\nexport const Loading = styled.div`\n  text-align: center;\n  font-size: 18px;\n  color: gray;\n`;\n\nexport const Error = styled.div`\n  text-align: center;\n  font-size: 18px;\n  color: red;\n`;\nexport const PreparingMessage = styled.div`\n  font-size: 1.2rem;\n  font-weight: 500;\n  text-align: center;\n  padding: 20px;\n  color: #555;\n`;\n"],"names":["notices","setNotices","useState","loading","setLoading","error","setError","useEffect","async","sortedData","axios","get","concat","process","headers","data","sort","a","b","id","err","fetchNotices","_jsx","S","children","_jsxs","map","notice","href","link","target","rel","title","date","Container","styled","div","_templateObject","_taggedTemplateLiteral","Title","h1","_templateObject2","TitleBar","_templateObject3","TabContainer","_templateObject4","TabItem","_templateObject5","props","active","List","_templateObject6","ListHeader","_templateObject7","ListRow","_templateObject8","ListColumn","_templateObject9","Loading","_templateObject10","Error","_templateObject11","PreparingMessage","_templateObject12"],"sourceRoot":""}