{"version":3,"file":"static/js/775.ca809edd.chunk.js","mappings":"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","sources":["components/ClubCategory/ClubCategory.styles.jsx","components/ClubCategory/ClubCategory.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\n/* PageContainer: 데스크탑에서는 사이드바와 콘텐츠를 가로로 배치, 모바일에서는 세로 배치 */\nexport const PageContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  box-sizing: border-box;\n  overflow-x: hidden; /* 추가: 수평 오버플로우 방지 */\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    padding: 10px;\n    gap: 10px;\n    max-width: 100%;\n  }\n`;\n\nexport const SidebarList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const SidebarItem = styled.li`\n  font-size: 14px;\n  font-weight: ${(props) => (props.isSelected ? \"700\" : \"400\")};\n  color: ${(props) => (props.isSelected ? \"#007aff\" : \"#333\")};\n  margin-bottom: 10px;\n  cursor: pointer;\n  padding: 5px 10px;\n  border-radius: 5px;\n  background-color: ${(props) =>\n    props.isSelected ? \"#e6f7ff\" : \"transparent\"};\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;\n\nexport const Content = styled.div`\n  flex-grow: 1; /* 남은 공간을 모두 사용 */\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Title1 = styled.h1`\n  width: 100%;\n  font-size: 20px;\n  font-weight: 700;\n  color: #1d1d1f;\n  text-align: left;\n  margin-bottom: 10px;\n`;\n\nexport const TitleBar = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: black;\n  margin-bottom: 15px;\n  border-radius: 2px;\n`;\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, max-content));\n  gap: 20px;\n  width: 100%;\n  margin: 0 auto;\n\n  /* 왼쪽 정렬을 위해 center 대신 start 사용 */\n  justify-content: start;\n  align-items: start;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    justify-content: center;\n  }\n`;\n\n/* EventBox: 카드 자체는 그리드 셀의 너비에 맞춰 중앙에 배치 */\nexport const EventBox = styled.div`\n  width: 100%;\n  max-width: 180px;\n  background-color: #ffffff;\n  border: 0.2px solid rgb(213, 213, 213);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  transition: transform 0.3s ease;\n  cursor: pointer;\n  margin: 0 auto; /* 그리드 셀 내에서 중앙 정렬 */\n\n  &:hover {\n    transform: translateY(-8px);\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\n/* ImageWrapper: 데스크탑/모바일 모두 이미지를 보여줌 */\nexport const ImageWrapper = styled.div`\n  width: 100%;\n  position: relative;\n\n  img {\n    width: 100%;\n    height: 180px;\n    object-fit: cover;\n  }\n\n  &::before {\n    content: attr(data-label);\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    background-color: #ff4d4f;\n    color: white;\n    font-size: 11px;\n    font-weight: bold;\n    padding: 4px 10px;\n    border-radius: 8px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 16px;\n  font-weight: 700;\n  color: #1d1d1f;\n  text-align: center;\n  margin: 10px 0;\n\n  @media (max-width: 768px) {\n    text-align: left;\n    margin: 10px 0 0 0;\n    color: #000;\n    margin-left: 10px;\n  }\n`;\n\nexport const Description = styled.p`\n  font-size: 14px;\n  color: #6e6e73;\n  text-align: center;\n  margin: 0 10px 10px 10px;\n\n  @media (max-width: 768px) {\n    text-align: left;\n  }\n`;\nexport const SidebarHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  padding: 8px 10px; /* 패딩을 줄임 */\n  background-color: #f9f9f9;\n  border-radius: 4px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n/* Sidebar: 데스크탑에서는 왼쪽 고정, 모바일에서는 상단 전체 너비 */ export const Sidebar = styled.div`\n  /* 데스크톱 기본 스타일 */\n  width: 160px;\n  background-color: #f9f9f9;\n  padding: 20px; /* 데스크톱일 때는 20px 패딩 */\n  border-radius: 10px;\n  margin-right: 30px;\n  box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.1);\n  position: sticky;\n  top: 20px;\n  height: fit-content;\n\n  /* 모바일(768px 이하)에서 덮어쓰기 */\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-right: 0;\n    margin-bottom: 10px;\n    position: static;\n    padding: 8px 0px; /* 모바일일 때는 8px 10px으로 변경 */\n  }\n`;\n\nexport const SidebarTitle = styled.h2`\n  /* 데스크톱 기본 스타일 */\n  font-size: 18px; /* 데스크톱에서 18px */\n  font-weight: 700; /* 데스크톱에서 700 */\n  color: #1d1d1f;\n  margin-bottom: 10px;\n\n  /* 모바일(768px 이하)에서 덮어쓰기 */\n  @media (max-width: 768px) {\n    font-size: 16px;\n    font-weight: 600;\n    margin: 0;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\nexport const TopBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n`;\nexport const SearchContainer = styled.div`\n  position: relative;\n  width: 250px; /* 필요에 따라 조정 */\n`;\n\n// 검색 인풋: 아랫줄 테두리만 표시\nexport const SearchInput = styled.input`\n  width: 70%;\n  padding: 8px 40px 8px 12px; /* 오른쪽 여백은 아이콘 공간 확보 */\n  font-size: 14px;\n  border: none;\n  border-bottom: 1px solid #333; /* 진한 검정색 아랫줄 */\n  outline: none;\n\n  &::placeholder {\n    color: #555; /* placeholder 텍스트 색상 */\n  }\n`;\n\n// 검색 아이콘: 오른쪽 끝에 위치하도록 절대배치\nexport const SearchIcon = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #333;\n  font-size: 16px;\n`;\nexport const MobileSearchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin: 10px auto;\n  padding-bottom: 5px;\n  border-bottom: 2px solid black;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const MobileSearchInput = styled.input`\n  flex: 1;\n  border: none;\n  outline: none;\n  font-size: 14px;\n  color: #333;\n  background: transparent;\n  padding: 5px;\n  &::placeholder {\n    color: #555;\n  }\n`;\n\nexport const MobileSearchIcon = styled.div`\n  margin-left: 5px;\n  color: #555;\n`;\nexport const RecruitmentTag = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: #ff4d4f;\n  color: white;\n  font-size: 11px;\n  font-weight: bold;\n  padding: 4px 10px;\n  border-radius: 8px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport * as S from './ClubCategory.styles'; // ClubList 스타일 적용\nimport defaultImage from '../../asset/mainLogo.png';\nimport { FaChevronDown, FaChevronUp, FaSearch } from 'react-icons/fa';\n\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nconst API_URL = process.env.REACT_APP_API_URL;\n\nconst categories = [\n  { name: '스포츠' },\n  { name: '학술' },\n  { name: '종교' },\n  { name: '문화/예술' },\n  { name: '창업' },\n  { name: '사교' },\n  { name: '봉사' },\n];\n\nfunction CategoryClubList() {\n  const { categoryName } = useParams();\n  const navigate = useNavigate();\n  const [clubs, setClubs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // 모바일 여부 감지\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  useEffect(() => {\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // 모바일 사이드바 확장 여부 상태\n  const [sidebarExpanded, setSidebarExpanded] = useState(false);\n\n  useEffect(() => {\n    const fetchClubs = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(\n          `${API_URL}/api/clubs?category=${encodeURIComponent(categoryName)}`,\n          {\n            headers: {\n              'Content-Type': 'application/json',\n              'ngrok-skip-browser-warning': '69420',\n            },\n          }\n        );\n        setClubs(\n          Array.isArray(response.data)\n            ? response.data.map((club) => ({\n                ...club,\n                image: club.logo_url || defaultImage,\n                description:\n                  club.club_description || '설명이 제공되지 않았습니다.',\n              }))\n            : []\n        );\n      } catch (err) {\n        setError(err.response?.data?.message || err.message);\n        setClubs([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchClubs();\n  }, [categoryName]);\n\n  // 🔄 카테고리 변경 시 검색어 초기화\n  useEffect(() => {\n    setSearchTerm('');\n  }, [categoryName]);\n\n  const handleClubClick = (clubId) => {\n    navigate(`/clubinfo/${clubId}`);\n  };\n\n  const handleCategoryClick = (cat) => {\n    navigate(`/category/${encodeURIComponent(cat)}`);\n    if (isMobile) setSidebarExpanded(false); // 모바일에서 카테고리 선택 시 사이드바 접기\n  };\n\n  // 🔍 검색 input onChange 핸들러\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  // 🔍 검색어로 시작하는 동아리만 필터링\n  const filteredClubs = clubs.filter((club) =>\n    club.club_name.toLowerCase().startsWith(searchTerm.toLowerCase())\n  );\n\n  return (\n    <S.PageContainer>\n      {/* 📌 모바일에서만 검색창 추가 */}\n      {isMobile && (\n        <S.MobileSearchContainer>\n          <S.MobileSearchInput\n            type=\"text\"\n            placeholder=\"검색\"\n            value={searchTerm}\n            onChange={handleSearchChange}\n          />\n          <S.MobileSearchIcon>\n            <FaSearch />\n          </S.MobileSearchIcon>\n        </S.MobileSearchContainer>\n      )}\n\n      <S.Sidebar>\n        {isMobile ? (\n          <>\n            <S.SidebarHeader\n              onClick={() => setSidebarExpanded(!sidebarExpanded)}\n            >\n              <S.SidebarTitle>카테고리</S.SidebarTitle>\n              {sidebarExpanded ? <FaChevronUp /> : <FaChevronDown />}\n            </S.SidebarHeader>\n\n            {sidebarExpanded && (\n              <S.SidebarList>\n                {categories.map((cat, index) => (\n                  <S.SidebarItem\n                    key={index}\n                    onClick={() => handleCategoryClick(cat.name)}\n                    isSelected={cat.name === categoryName}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    {cat.name}\n                  </S.SidebarItem>\n                ))}\n              </S.SidebarList>\n            )}\n          </>\n        ) : (\n          <>\n            <S.SidebarTitle>카테고리</S.SidebarTitle>\n            <S.SidebarList>\n              {categories.map((cat, index) => (\n                <S.SidebarItem\n                  key={index}\n                  onClick={() => handleCategoryClick(cat.name)}\n                  isSelected={cat.name === categoryName}\n                  style={{ cursor: 'pointer' }}\n                >\n                  {cat.name}\n                </S.SidebarItem>\n              ))}\n            </S.SidebarList>\n          </>\n        )}\n      </S.Sidebar>\n\n      <S.Content>\n        <S.TopBar>\n          <S.Title1>{categoryName} 동아리</S.Title1>\n\n          {/* 📌 데스크탑 검색창 유지 */}\n          {!isMobile && (\n            <S.SearchContainer>\n              <S.SearchInput\n                type=\"text\"\n                placeholder=\"검색\"\n                value={searchTerm}\n                onChange={handleSearchChange}\n              />\n              <S.SearchIcon>\n                <FaSearch />\n              </S.SearchIcon>\n            </S.SearchContainer>\n          )}\n        </S.TopBar>\n\n        <S.TitleBar />\n        {loading && <div>Loading...</div>}\n        {error && <div>Error: {error}</div>}\n        <S.Container>\n          {filteredClubs.map((club) => (\n            <S.EventBox\n              key={club.club_id}\n              onClick={() => handleClubClick(club.club_id)}\n              bg={club.image}\n            >\n              <S.ImageWrapper\n                data-label={club.club_type}\n                style={{\n                  height: '180px',\n                  overflow: 'hidden',\n                  position: 'relative',\n                }}\n              >\n                <LazyLoadImage\n                  src={club.image}\n                  alt={club.club_name}\n                  effect=\"blur\"\n                  style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n                />\n                {club.recruitment_scope && (\n                  <S.RecruitmentTag>{club.recruitment_scope}</S.RecruitmentTag>\n                )}\n              </S.ImageWrapper>\n\n              <S.Title>{club.club_name}</S.Title>\n              <S.Description>\n                {club.description.length > 35\n                  ? `${club.description.slice(0, 35)}...`\n                  : club.description}\n              </S.Description>\n            </S.EventBox>\n          ))}\n        </S.Container>\n      </S.Content>\n    </S.PageContainer>\n  );\n}\n\nexport default CategoryClubList;\n"],"names":["PageContainer","styled","div","_templateObject","_taggedTemplateLiteral","SidebarList","ul","_templateObject2","SidebarItem","li","_templateObject3","props","isSelected","Content","_templateObject4","Title1","h1","_templateObject5","TitleBar","_templateObject6","Container","_templateObject7","EventBox","_templateObject8","ImageWrapper","_templateObject9","Title","h2","_templateObject10","Description","p","_templateObject11","SidebarHeader","_templateObject12","Sidebar","_templateObject13","SidebarTitle","_templateObject14","TopBar","_templateObject15","SearchContainer","_templateObject16","SearchInput","input","_templateObject17","SearchIcon","_templateObject18","MobileSearchContainer","_templateObject19","MobileSearchInput","_templateObject20","MobileSearchIcon","_templateObject21","RecruitmentTag","_templateObject22","categories","name","categoryName","useParams","navigate","useNavigate","clubs","setClubs","useState","loading","setLoading","error","setError","searchTerm","setSearchTerm","isMobile","setIsMobile","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","sidebarExpanded","setSidebarExpanded","async","response","axios","get","concat","process","encodeURIComponent","headers","Array","isArray","data","map","club","_objectSpread","image","logo_url","defaultImage","description","club_description","err","_err$response","_err$response$data","message","fetchClubs","handleCategoryClick","cat","handleSearchChange","e","target","value","filteredClubs","filter","club_name","toLowerCase","startsWith","_jsxs","S","children","_jsx","type","placeholder","onChange","FaSearch","_Fragment","onClick","FaChevronUp","FaChevronDown","index","style","cursor","handleClubClick","clubId","club_id","bg","club_type","height","overflow","position","LazyLoadImage","src","alt","effect","width","objectFit","recruitment_scope","length","slice"],"sourceRoot":""}