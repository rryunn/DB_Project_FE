{"version":3,"file":"static/js/733.5e64b1a4.chunk.js","mappings":"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","sources":["components/EventInfo/EventInfo.styles.jsx","components/EventInfo/EventInfo.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Location = styled.p`\n  font-size: 12px;\n  font-weight: 500;\n  color: #007aff;\n  text-align: left;\n  margin: 0 10px;\n`;\nexport const ClubName = styled.p`\n  font-size: 12px;\n  font-weight: 500;\n  color: #8e8e93;\n  text-align: left;\n  margin: 0 10px;\n`;\nexport const Date = styled.p`\n  font-size: 12px;\n  font-weight: 500;\n  color: #8e8e93;\n  text-align: left;\n  margin: 0 10px;\n  margin-bottom: 10px;\n`;\n\n/* PageContainer: 데스크탑에서는 사이드바와 콘텐츠를 좌우 배치, 모바일에서는 세로 배치 */\nexport const PageContainer = styled.div`\n  display: flex;\n  flex-direction: row; /* 기본: 좌우 배치 */\n  gap: 20px;\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  box-sizing: border-box;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    padding: 10px;\n    gap: 10px;\n  }\n`;\n\nexport const SidebarList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const SidebarItem = styled.li`\n  font-size: 14px;\n  font-weight: ${({ isselected }) => (isselected ? \"700\" : \"400\")};\n  color: ${({ isselected }) => (isselected ? \"rgb(56, 56, 57)\" : \"#333\")};\n  margin-bottom: 10px;\n  cursor: pointer;\n  padding: 5px 10px;\n  border-radius: 5px;\n  transition: background-color 0.3s ease, color 0.3s ease;\n  background-color: ${({ isselected }) =>\n    isselected ? \"#f0f0f0\" : \"transparent\"};\n\n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;\n\nexport const SidebarSubItem = styled.li`\n  padding: 8px 15px;\n  font-size: 13px;\n  cursor: pointer;\n  color: ${({ isselected }) => (isselected ? \"rgb(18, 103, 188)\" : \"#6c757d\")};\n  transition: color 0.3s ease;\n  margin-left: 20px;\n  border-left: 2px solid #e0e0e0;\n  padding-left: 10px;\n\n  &:hover {\n    color: rgb(18, 103, 188);\n  }\n`;\n\nexport const Content = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const Title1 = styled.h1`\n  width: 100%;\n  font-size: 20px;\n  font-weight: 700;\n  color: #1d1d1f;\n  text-align: left;\n  margin-bottom: 10px;\n`;\n\nexport const TitleBar = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: black;\n  margin-bottom: 15px;\n  border-radius: 2px;\n`;\n\nexport const Container = styled.div`\n  display: grid;\n\n  grid-template-columns: repeat(auto-fit, minmax(150px, max-content));\n  gap: 20px;\n  width: 100%;\n  margin: 0 auto;\n\n  /* 왼쪽 정렬을 위해 center 대신 start 사용 */\n  justify-content: start;\n  align-items: start;\n  @media (max-width: 768px) {\n    width: 100%;\n    justify-content: center;\n  }\n`;\n\n/* EventBox: 카드 자체는 그리드 셀의 너비에 맞춰 중앙에 배치 */\nexport const EventBox = styled.div`\n  width: 100%;\n  max-width: 180px;\n  background-color: #ffffff;\n  border: 0.2px solid rgb(213, 213, 213);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  transition: transform 0.3s ease;\n  cursor: pointer;\n  margin: 0 auto; /* 그리드 셀 내에서 중앙 정렬 */\n\n  &:hover {\n    transform: translateY(-8px);\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\n/* ImageWrapper: 이미지는 항상 전체 너비에 맞게 표시 */\nexport const ImageWrapper = styled.div`\n  width: 100%;\n  position: relative;\n\n  img {\n    width: 100%;\n    height: 180px;\n    object-fit: cover;\n  }\n\n  &::before {\n    content: attr(data-label);\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    background-color: rgb(255, 82, 85);\n    color: white;\n    font-size: 11px;\n    font-weight: bold;\n    padding: 4px 10px;\n    border-radius: 8px;\n  }\n\n  &::after {\n    content: attr(data-scope);\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background-color: rgb(255, 82, 85);\n    color: white;\n    font-size: 11px;\n    font-weight: bold;\n    padding: 4px 10px;\n    border-radius: 8px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 16px;\n  font-weight: 700;\n  color: #1d1d1f;\n  text-align: center;\n  margin: 10px 0;\n\n  @media (max-width: 768px) {\n    text-align: left;\n    margin: 10px 0 0 0;\n    color: #000;\n    margin-left: 10px;\n  }\n`;\n\nexport const Description = styled.p`\n  font-size: 14px;\n  color: #6e6e73;\n  text-align: center;\n  margin: 0 10px 10px 10px;\n\n  @media (max-width: 768px) {\n    text-align: left;\n  }\n`;\n\nexport const RecruitmentInfo = styled.p`\n  font-size: 0.9rem;\n  color: #666;\n  margin-top: 4px;\n`;\nexport const SidebarHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  padding: 8px 10px; /* 패딩을 줄임 */\n  background-color: #f9f9f9;\n  border-radius: 4px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nexport const Sidebar = styled.div`\n  /* 데스크톱 기본 스타일 */\n  width: 160px;\n  background-color: #f9f9f9;\n  padding: 20px; /* 데스크톱일 때는 20px 패딩 */\n  border-radius: 10px;\n  margin-right: 30px;\n  box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.1);\n  position: sticky;\n  top: 20px;\n  height: fit-content;\n\n  /* 모바일(768px 이하)에서 덮어쓰기 */\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-right: 0;\n    margin-bottom: 10px;\n    position: static;\n    padding: 8px 10px; /* 모바일일 때는 8px 10px으로 변경 */\n  }\n`;\n\nexport const SidebarTitle = styled.h2`\n  /* 데스크톱 기본 스타일 */\n  font-size: 18px; /* 데스크톱에서 18px */\n  font-weight: 700; /* 데스크톱에서 700 */\n  color: #1d1d1f;\n  margin-bottom: 10px;\n\n  /* 모바일(768px 이하)에서 덮어쓰기 */\n  @media (max-width: 768px) {\n    font-size: 16px;\n    font-weight: 600;\n    margin: 0;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport * as S from \"./EventInfo.styles\"; // 스타일 파일은 동일하게 사용\nimport axios from \"axios\";\nimport defaultImage from \"../../asset/mainLogo.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nfunction MiniClub() {\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(\"전체\");\n  const navigate = useNavigate();\n  const categories = [\"음악\", \"댄스\", \"전시\", \"봉사\", \"기타\"];\n\n  // 모바일 여부 감지\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  useEffect(() => {\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  // 모바일 사이드바 확장 여부\n  const [sidebarExpanded, setSidebarExpanded] = useState(false);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(`${API_URL}/api/home/updatedevent`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"ngrok-skip-browser-warning\": \"69420\",\n          },\n          params:\n            selectedCategory !== \"전체\" ? { category: selectedCategory } : {},\n        });\n        setEvents(\n          Array.isArray(response.data)\n            ? response.data.map((event) => ({\n                ...event,\n                image: event.main_image || defaultImage,\n              }))\n            : []\n        );\n      } catch (err) {\n        setError(err.response?.data?.message || err.message);\n        setEvents([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchEvents();\n  }, [selectedCategory]);\n\n  if (loading) return <S.PageContainer>Loading...</S.PageContainer>;\n  if (error) return <S.PageContainer>Error: {error}</S.PageContainer>;\n\n  const titleText = `행사 > ${selectedCategory}`;\n\n  return (\n    <S.PageContainer>\n      <S.Sidebar>\n        {isMobile ? (\n          <>\n            <S.SidebarHeader\n              onClick={() => setSidebarExpanded(!sidebarExpanded)}\n            >\n              <S.SidebarTitle>행사</S.SidebarTitle>\n              {sidebarExpanded ? <FaChevronUp /> : <FaChevronDown />}\n            </S.SidebarHeader>\n            {sidebarExpanded && (\n              <S.SidebarList>\n                {categories.map((cat, index) => (\n                  <S.SidebarItem\n                    key={index}\n                    onClick={() => {\n                      setSelectedCategory(cat);\n                      setSidebarExpanded(false); // 선택 후 자동으로 접힘\n                    }}\n                    selected={selectedCategory === cat}\n                  >\n                    {cat}\n                  </S.SidebarItem>\n                ))}\n              </S.SidebarList>\n            )}\n          </>\n        ) : (\n          <>\n            <S.SidebarTitle>행사</S.SidebarTitle>\n            <S.SidebarList>\n              {categories.map((cat, index) => (\n                <S.SidebarItem\n                  key={index}\n                  onClick={() => setSelectedCategory(cat)}\n                  selected={selectedCategory === cat}\n                >\n                  {cat}\n                </S.SidebarItem>\n              ))}\n            </S.SidebarList>\n          </>\n        )}\n      </S.Sidebar>\n\n      <S.Content>\n        <S.Title1>{titleText}</S.Title1>\n        <S.TitleBar />\n        <S.Container>\n          {events.map((event) => (\n            <S.EventBox\n              key={event.club_id}\n              onClick={() =>\n                navigate(`/clubinfo/${event.club_id}`, {\n                  state: { defaultTab: \"행사 공고\" },\n                })\n              }\n            >\n              <S.ImageWrapper style={{ height: \"180px\", overflow: \"hidden\" }}>\n                <img\n                  src={event.image}\n                  alt={event.title}\n                  style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }}\n                />\n              </S.ImageWrapper>\n              {/* club_name 추가 */}\n              <S.Title>{event.title}</S.Title>\n              <S.Location>장소 : {event.location}</S.Location>\n              <S.ClubName>주최 동아리 : {event.club_name} </S.ClubName>\n              <S.Date>\n                날짜 : {new Date(event.event_date).toLocaleDateString()}\n              </S.Date>\n            </S.EventBox>\n          ))}\n        </S.Container>\n      </S.Content>\n    </S.PageContainer>\n  );\n}\n\nexport default MiniClub;\n"],"names":["Location","styled","p","_templateObject","_taggedTemplateLiteral","ClubName","_templateObject2","Date","_templateObject3","PageContainer","div","_templateObject4","SidebarList","ul","_templateObject5","SidebarItem","li","_templateObject6","_ref","isselected","_ref2","_ref3","Content","_templateObject7","_ref4","_templateObject8","Title1","h1","_templateObject9","TitleBar","_templateObject10","Container","_templateObject11","EventBox","_templateObject12","ImageWrapper","_templateObject13","Title","h2","_templateObject14","SidebarHeader","_templateObject15","_templateObject16","_templateObject17","Sidebar","_templateObject18","SidebarTitle","_templateObject19","events","setEvents","useState","loading","setLoading","error","setError","selectedCategory","setSelectedCategory","navigate","useNavigate","categories","isMobile","setIsMobile","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","sidebarExpanded","setSidebarExpanded","async","response","axios","get","concat","process","headers","params","category","Array","isArray","data","map","event","_objectSpread","image","main_image","defaultImage","err","_err$response","_err$response$data","message","fetchEvents","_jsx","S","children","_jsxs","titleText","_Fragment","onClick","FaChevronUp","FaChevronDown","cat","index","selected","club_id","state","defaultTab","style","height","overflow","src","alt","title","width","objectFit","location","club_name","event_date","toLocaleDateString"],"sourceRoot":""}